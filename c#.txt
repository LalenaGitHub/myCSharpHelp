#region
#endregion



HotKeys
Kommentar 
Strl+K  Strl+K
Strl+C  Strl+U

Format 
Strl+K	Strl+D
Strl+K	Strl+F


<-------------------------------------------------------------->
Timer

using System.Windows.Threading;

namespace nsKartenSpiel
{
    public partial class MainWindow : Window
    {

        DispatcherTimer timer = new DispatcherTimer();

        public MainWindow()
        {
            InitializeComponent();

            timer.Tick += new EventHandler(timer_tick);
            timer.Interval = new TimeSpan(0, 0, 1);
        }

        int i = 0;
        private void timer_tick(object sender, EventArgs e) {
            
            lblSeconds.Content = i.ToString();
            lblCard.Content = CardList.listAllCardsMix[i].ToString();
            i++;
            if (i == CardList.listAllCardsMix.Count) {
                timer.Stop();
            }
        }


<-------------------------------------------------------------->
//Indexer 
using System;

class SampleCollection<T>
{
   // Declare an array to store the data elements.
   private T[] arr = new T[100];

   // Define the indexer to allow client code to use [] notation.
   public T this[int i]
   {
      get { return arr[i]; }
      set { arr[i] = value; }
   }
}

class Program
{
   static void Main()
   {
      var stringCollection = new SampleCollection<string>();
      stringCollection[0] = "Hello, World";
      Console.WriteLine(stringCollection[0]);
   }
}
// The example displays the following output:
//       Hello, World.

<-------------------------------------------------------------->

JSON:
https://www.youtube.com/watch?v=XssLaKDRV4Y

Convertor 
String --> JSON 
https://jsoneditoronline.org/

JSON --> C#
http://json2csharp.com/#

Exampel
https://api.exmo.com/v1/trades/?pair=BTC_USD

// DataToTrade.cs
using System;
using System.Collections.Generic;

namespace ExmoAPI
{
    internal class DataToTrade
    {

        public class BTCUSD
        {
            public int trade_id { get; set; }
            public string type { get; set; }
            public string quantity { get; set; }
            public string price { get; set; }
            public string amount { get; set; }
            public int date { get; set; }
        }

        public class BTCUSDList
        {
            public List<BTCUSD> BTC_USD { get; set; }
        }

    }
}

 

//Main 
var value = api.ApiQuery("trades", new Dictionary<string, string> { { "pair", "BTC_USD" } } );

BTCUSDList btcusd = JsonConvert.DeserializeObject<BTCUSDList>(value);
Console.WriteLine(btcusd.BTC_USD[0].type);